---
import Layout from "../layouts/Layout.astro";
import { getCldImageUrl } from "astro-cloudinary/helpers";
import Heading from "fulldev-ui/components/Heading.astro";
import Button from "fulldev-ui/components/Button.astro";
import { CldImage } from "astro-cloudinary";

const { searchParams } = Astro.url;
const id = searchParams.get("id");

if (id === null) {
  return Astro.redirect("/");
}

const url = getCldImageUrl({ src: id });
console.log(id, url);
---

<Layout title="Welcome to Astro.">
  <main data-id={id}>
    <header>
      <Heading color="brand" contrast={false}> Temas </Heading>
      <Button class="effect" data-effect="replace" as="button" color="brand">
        Generative Replace
      </Button>
      <Button class="effect" data-effect="blur" as="button" color="brand">
        Blur
      </Button>
      <Button class="effect" data-effect="grayscale" as="button" color="brand">
        Grayscale
      </Button>
    </header>
  </main>

  <two-up>
    <CldImage id="original" src={id} alt="Original Photo" />
    <CldImage id="preview" src={id} replace={[]} alt="Preview Photo" />
  </two-up>
  <small>{url}</small>

  <!-- http://localhost:4321/photo?id=nfkuhsrwtl1kkqaova1x -->
  <!-- http://localhost:4321/photo?id=e52nnnclj5yljftbmqu9 -->

  <style>
    main {
      width: 800px;
      margin: 0 auto;
      padding-top: 100px;
      text-align: center;
    }
    img {
      max-width: 100%;
      height: auto;
      border-radius: 12px;
      transition: opacity 0.3s ease-in-out;
    }
  </style>

  <script>
    import { getCldImageUrl } from "astro-cloudinary/helpers";
    import "two-up-element";

    const id = document.querySelector("main")?.getAttribute("data-id") ?? "";
    const preview = document.getElementById("preview") as HTMLImageElement;
    const buttons = document.querySelectorAll("button.effect");

    buttons.forEach((button) => {
      button.addEventListener("click", (e) => {
        const effect = button.getAttribute("data-effect");
        if (!effect) return;

        let url;

        switch (effect) {
          case "replace":
            url = getCldImageUrl({
              src: id,
              replace: ["object_to_replace", "another_object"], // Reemplazo generativo
            });
            break;
          case "blur":
            url = getCldImageUrl({
              src: id,
              blur: "1200", // Efecto Blur
            });
            break;
          case "grayscale":
            url = getCldImageUrl({
              src: id,
              grayscale: true, // Escala de grises
            });
            break;
          default:
            return;
        }

        preview.style.opacity = "0.5";
        preview.src = url;
        preview.onload = () => {
          preview.style.opacity = "1";
        };
      });
    });
  </script></Layout
>
